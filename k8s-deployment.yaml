apiVersion: v1
kind: Namespace
metadata:
  name: monitoring
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: fastapi-deployment
  namespace: monitoring
spec:
  replicas: 2
  selector:
    matchLabels:
      app: fastapi
  template:
    metadata:
      labels:
        app: fastapi
    spec:
      containers:
      - name: fastapi
        image: hw1186/server:latest
        ports:
        - containerPort: 80

---
apiVersion: v1
kind: Service
metadata:
  name: fastapi-service
  namespace: monitoring
spec:
  selector:
    app: fastapi
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
  type: LoadBalancer

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-deployment
  namespace: monitoring
spec:
  replicas: 2
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
      - name: nginx
        image: nginx:latest
        ports:
        - containerPort: 80

---
apiVersion: v1
kind: Service
metadata:
  name: nginx-service
  namespace: monitoring
spec:
  selector:
    app: nginx
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
  type: LoadBalancer


---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: react-frontend-deployment
  namespace: monitoring
spec:
  replicas: 2 
  selector:
    matchLabels:
      app: react-frontend
  template:
    metadata:
      labels:
        app: react-frontend
    spec:
      containers:
      - name: react-frontend
        image: hw1186/front:latest 
        ports:
        - containerPort: 80 # React 애플리케이션이 사용하는 포트를 지정하세요.

---
apiVersion: v1
kind: Service
metadata:
  name: react-frontend-service
  namespace: monitoring
spec:
  selector:
    app: react-frontend
  ports:
    - protocol: TCP
      port: 80 # 외부에 노출할 포트를 지정하세요.
      targetPort: 80 # 컨테이너가 리스닝하는 포트와 일치해야 합니다.
  type: LoadBalancer
